<li
  class="task {{if this.isQuickEditing 'editing'}} {{if @task.done 'done'}} {{if @task.isError 'error'}} {{if @task.isNew 'pending'}}"
  ...attributes
>
  {{#if this.isQuickEditing}}
    <AutofocusElasticTextarea
      @onEscapePressed={{this.cancelEdit}}
      @onEnterPressed={{this.updateTask}}
      @value={{this.editDescription}}
      class="edit"
      {{on "focusout" this.cancelEdit}}
    />
  {{else}}
    {{#if (has-block "before")}}
      {{yield to="before"}}
    {{/if}}

    <div class="flex-container">
      <div class="state">
        {{#if @task.isError}}
          <FaIcon @icon="exclamation-triangle" title="Task failed to save" />
        {{else if @task.isNew}}
          <FaIcon @icon="spinner" @spin={{true}} />
        {{else}}
          {{!-- template-lint-disable require-input-label --}}
          <input
            type="checkbox"
            checked={{@task.done}}
            {{on "change" this.toggleTaskDone}}
          >
        {{/if}}
      </div>

      <div
        class="description"
        role="button"
        {{on "click" (perform this.quickEditTask)}}
        {{on "dblclick" this.editTask}}
        {{on "touchend" this.simulateDoubleClicks}}
      >
        <MarkdownToHtml @markdown={{@task.description}} role="presentation" />
      </div>

      {{#if @task.notes}}
        <div>
          <FaIcon @icon="sticky-note" @prefix="far" data-test-task-has-notes />
        </div>
      {{/if}}
    </div>

    {{#if (has-block "after")}}
      {{yield to="after"}}
    {{/if}}
  {{/if}}

  {{!--
    Don't include isFullEditing in the if/else ladder because we want to render the content normally underneath the modal.
  --}}
  {{#if this.isFullEditing}}
    <EditTaskModal @task={{@task}} @onClose={{this.cancelEdit}} />
  {{/if}}
</li>
