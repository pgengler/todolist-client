{{!-- template-lint-disable no-invalid-interactive --}}
<li
  class="task {{if this.isQuickEditing 'editing'}} {{if @task.done 'done'}} {{if @task.isError 'error'}} {{if @task.isNew 'pending'}}"
  draggable="true"
  {{on "click" (perform this.quickEditTask)}}
  {{on "dblclick" this.editTask}}
  {{on "dragstart" this.onDragStart}}
  {{on "touchend" this.simulateDoubleClicks}}
  ...attributes
>
  {{#if this.isQuickEditing}}
    <AutofocusElasticTextarea
      @onEscapePressed={{this.cancelEdit}}
      @onEnterPressed={{this.updateTask}}
      @value={{this.editDescription}}
      class="edit"
      {{on "focusout" this.cancelEdit}}
    />
  {{else}}
    <div class="state">
      {{#if @task.isError}}
        <FaIcon @icon="exclamation-triangle" title="Task failed to save" />
      {{else if @task.isNew}}
        <FaIcon @icon="spinner" @spin={{true}} />
      {{else}}
        {{!-- template-lint-disable require-input-label --}}
        <input type="checkbox" checked={{@task.done}} {{on "change" (prevent-default this.toggleTaskDone)}}>
      {{/if}}
    </div>

    <div class="description">
      <MarkdownToHtml @markdown={{@task.description}} />
    </div>

    {{#if @task.notes}}
      <div>
        <FaIcon @icon="sticky-note" @prefix="far" data-test-task-has-notes />
      </div>
    {{/if}}
  {{/if}}
</li>

{{!--
  Don't include isFullEditing in the if/else ladder because we want to render the content normally underneath the modal.
  Don't include it inside the <li> either, because otherwise the "click" handler fires on clicks inside the modal
--}}
{{#if this.isFullEditing}}
  <EditTaskModal @task={{@task}} @onClose={{this.cancelEdit}} />
{{/if}}
